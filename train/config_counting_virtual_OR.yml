_name: network_trainer
data_loaders:
  _name: fetch_data
  dataset: 
    _name: virtual_OR_classification
    data_dir: ../../../../../../../media/James/BigData/Virtual_OR_Dataset/     
    year: 2019
  batch_size: 16
  num_workers: 4
  dataloader_flag: counting    ##control how to load data
  transform:
    _name: image_transform
    image_size: [448, 448]
    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]
  train_augmentation:
    horizontal_flip: 0.5
  test_batch_size: 1          ## only support test batch of 1
  train_splits:
    - train
  test_splits:
    - val
model:
  _name: peak_response_mapping
  backbone:
    _name: fc_resnet50
    channels: 30
  win_size: 3
  sub_pixel_locating_factor: 1
  enable_peak_stimulation: true
  peak_stimulation: addedmodule5
criterion1:
  _name: class_reg_loss98_6                ## loss used in the first stage of the algorithm
criterion2:
  _name: class_reg_loss96_7_6               ## loss used in the second stage of the algorithm
optimizer:
  _name: sgd_optimizer
  lr: 0.01
  momentum: 0.9
  weight_decay: 1.0e-4
parameter:
  _name: finetune
  base_lr: 0.01
  groups:
    'features': 0.01
meters:
  loss:
    _name: loss_meter
max_epoch: 300
device: cuda
epoch_stage1: 20
train_method: joint_train
path_history: ../../../../../../../media/James/BigData/CountSeg_output/vOR_counting        ## path for saving checkpoints and training history
hooks:
  on_start:
    -
      _name: print_state
      formats:
        - '@CONFIG'
        - 'Model: {model}'
      join_str: '\n'
  on_end_epoch: 
    - 
      _name: print_state
      formats:
        - 'epoch: {epoch_idx}'
        - 'classification_loss: {metrics[train_loss]:.4f}'
  save_checkpoints: 
    -
      _name: checkpoint
      save_step: -1     ## save checkpoint step, negative step means not saving